后台页面框架 ： adminlte
https://almsaeedstudio.com/
Preview: https://almsaeedstudio.com/themes/AdminLTE/index2.html
nopcommerce使用解压出来的dist文件夹, 里面有css, img, js三个文件夹
~/Administration/Content/adminLTE =》 dist\css, dist\img
~/Administration/Scripts/adminLTE =》 dist\js里面的app.min.js， app.js

AdminLTEOptions 可以配置
define a global options variable named AdminLTEOptions and initialize it before loading app.js
<script>
    var AdminLTEOptions = {
        boxWidgetOptions: {
            boxWidgetIcons: {
                collapse: 'fa-minus',
                open: 'fa-plus'
            }
        }
    };
</script>
<script src="dist/js/app.js" type="text/javascript"></script>
原因：
app.js会调用extend，修改$.AdminLTE.options的值
if (typeof AdminLTEOptions !== "undefined") {
    $.extend(true,
      $.AdminLTE.options,
      AdminLTEOptions);
}


Kendo UI收费，使用合法吗？
nopcommerce使用开原版：（nopCommerce uses Kendo UI Web Open Source licensed under GPL v3 License. So it's legal to use it ）
http://www.telerik.com/download/kendo-ui-core, 解压出来有 js, styles, src三个文件夹 js,styles里面的是.min版本, .min.css, .min.js
~/Administration/Content/kendeo/2014.1.318  => styles文件夹内容（删除了.map文件）
~/Administration/Scripts/kendeo/2014.1.318  => js文件夹内容

Prototypes - 给object 增加属性或方法（http://www.w3schools.com/js/js_object_prototypes.asp）
JavaScript Object Prototypes: add new properties (or methods) to an existing object
// define person class
function Person(first, last, age, eyecolor) {
    this.firstName = first;
    this.lastName = last;
    this.age = age;
    this.eyeColor = eyecolor;
}
 Person.prototype.name = function() {
    return this.firstName + " " + this.lastName;
};

var myFather = new Person("John", "Doe", 50, "blue");

myFather.nationality = "English";                   // Adding a Property to an Object
myFather.name = function () {                       // Adding a Method to an Object
    return this.firstName + " " + this.lastName;
}; 

// Adding Properties to a Prototype
Person.nationality = "English";   // 错误 不能直接给类型增加Properties because the prototype is not an existing object

var name = myFather.name();  // 可以调用新建的方法



jquery $.fn
$.fn是指jquery的命名空间，加上fn上的方法及属性，会对jquery实例每一个有效。 
如扩展$.fn.abc(),即$.fn.abc()是对jquery扩展了一个abc方法,那么后面你的每一个jquery实例都可以引用这个方法了. 
查看jQuery代码
jQuery.fn = jQuery.prototype ={ 
　　　init: function(selector, context){//....　 
　　　//...... 
}; 
--------------------------------------------------
jQuery.fn.init.prototype = jQuery.fn = $.fn 
this means the functionality added via jQuery.fn.whatever is immediately available on the objects returned by all jQuery calls.

So for example, a simple jQuery plugin might be created and used like this:
jQuery.fn.foo = function () { alert("foo!"); };
jQuery(".some-selector").foo();
--------------------------------------------------

5 Different Ways to Declare Functions in jQuery
https://www.sitepoint.com/5-ways-declare-functions-jquery/
(funtion(){})()；立即执行函数；相当于先申明一个函数，声明完后直接调用；

(function(){})(jQuery);  // 扩展jQuery对象
其实际上是执行()(para)匿名方法,只不过是传递了jQuery对象。 相当于 
function aa($){} 
aa(jQuery)

Nop.Admin\Scirpts\Admin.Common.js, 给jQuery增加backTop方法， 点击返回页面顶部 (TODO: 收藏)
(function ($) {
    $.fn.backTop = function () {
		// ....
	};
})(jQuery);

直接调用$('#backtop').backTop() 就可以了